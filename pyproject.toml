[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "testing-containers"
version = "0.3.0"
description = "Spin up an isolated PostgreSQL test database (reusing local PG or Docker) with zero external service requirements for your test run."
authors = ["Tedi Cela <tedicela@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "testing_containers", from = "src" }]
homepage = "https://github.com/tedicela/testing-containers"
repository = "https://github.com/tedicela/testing-containers"
keywords = ["postgresql", "testing", "pytest", "docker", "alembic"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Testing",
  "Typing :: Typed"
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
psycopg = "^3.2.0"
pydantic = "^2.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-cov = "^5.0.0"
ruff = "^0.6.0"
mypy = "^1.11.0"
pre-commit = "^3.8.0"

[tool.ruff]
line-length = 100
target-version = "py310"
fix = true
lint.select = ["E","F","I","UP","B","SIM","PL","RUF"]
src = ["src", "tests"]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_unused_ignores = true
warn_return_any = true
disallow_any_generics = true
mypy_path = ["src"]
explicit_package_bases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q --cov=testing_containers --cov-report=term-missing"

[tool.commitizen]
name = "cz_conventional_commits"
version_provider = "poetry"
tag_format = "v$version"
version_files = ["pyproject.toml:tool.poetry.version"]
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
